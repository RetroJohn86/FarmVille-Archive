As development progresses, supplementary material will appear here.

- download PHP 8.4.x NTS zip (https://windows.php.net/download#php-8.4)
- download MySQL 5.7.44 (https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.44-winx64.zip or https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.44-win32.zip)
- download Composer (https://getcomposer.org/download/latest-stable/composer.phar)
- download the repo (https://github.com/FV-Replowed/fv-replowed/archive/refs/tags/v0.0.1-alpha.zip)
- download the supplements (https://1drv.ms/f/c/9ad5fe6cfa547da4/EhNtkviSLGFCnaY9-ib0jCkBtYjq7JNdK4_NyhFdjnNW0w?e=4VOvv2)
- download Laragon (https://github.com/leokhoa/laragon/archive/refs/tags/6.0.0.zip)
- install Node (https://nodejs.org/dist/v22.13.1/node-v22.13.1-x64.msi or https://nodejs.org/dist/v22.13.1/node-v22.13.1-x86.msi)
- install Flash (https://archive.org/download/flashplayerarchive/pub/flashplayer/installers/archive/fp_32.0.0.371_archive.zip/32_0_r0_371%2Fflashplayer32_0r0_371_win.exe)
- install Pale Moon (https://www.palemoon.org/download.php?mirror=us&bits=64&type=installer or https://www.palemoon.org/download.php?mirror=us&bits=32&type=installer)
- download the assets (https://archive.org/compress/original-farmville/formats=WEB%20ARCHIVE%20GZ&file=/original-farmville.zip)
- download FVDehasher
- extract the assets using FVDehasher, saving the assets folder inside farmville
- extract the repo to a folder, renaming fv-replowed-main to fv
- extract Laragon and copy the fv folder into www (delete index.php at the root)
- inside fv, rename .env.example to .env, and input your planned database credentials without quotes
- also inside fv, go to public/farmville/flashservices/amfphp/helpers and input the same credentials between the single quotes
- NOTE: for db name, I suggest farmvilledb, and for username, root is fine
- navigate inside laragon's bin folders and delete the pre-existing MySQL/PHP/Composer installs, pasting the new ones
- start Laragon
1 / 2

- click menu, go to PHP and click php.ini; change the second display_errors to Off with a capital O, and make error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
-  initialize the server by clicking the elephant, then click again to shut it off
- change the root password to the one you set earlier
- toggle the server on
- copy the assets folder into fv/public/farmville
- open the Laragon terminal, and execute cd fv
- run composer update, php artisan key:generate, php artisan migrate, npm install -i, npm run build, and php artisan serve
- click the database button, create a session with a name of your choosing, input the username and password, deselect the yellow triangle warning icon beside the donate button to allow errors, select farmvilledb, and File->Run SQL File->farmvilledb.sql from supplements (errors are normal!)
- move items.json into fv/public/props
- move the toolbar icon into fv/public/assets/hashed/assets/decorations
- install Pale Moon and Adobe Flash player (or another Flash-compatible browser) as necessary
- navigate to **localhost**:8000, create an account, and see if it plays (use the error message to locate which asset to rename according to rename.txt)
- every time you want to run the game, run cd fv and php artisan serve
2/2

here is a video tutorial for FVRP v0.0.1* alpha: https://drive.google.com/file/d/1aYwnywF2G9Mh5IepN3FPogMyFoXJ3Qyi/view

FV Dehasher (functionally complete and tested for use with Java 8+)
Extract FV files (with human-readable names) to assist in development and server setup.
Command: java -jar FVDehasher-1.01-SNAPSHOT.jar
I release this under the Apache 2.0 license. Thanks, jwarc team, for your work on such an awesome library!
Under prime conditions, this tool should run in roughly 3-5 minutes.
To utilize the extraction functionality, copy FV's WARC files into the program's working directory.
To utilize the dehashing functionality, copy assethash.txt into the program's working directory.
I have tested this tool thoroughly, but please inform me of bugs.
I may remove or replace these files at any time to ensure quality. Enjoy!

Howdy! I know it has been a while, but I figured I'd share something with y'all! ðŸ™‚
If anyone wants the dehasher without needing Java, I built native executables using GraalVM CE.
To run an unzipped executable, simply open a terminal in its location, type its name according to OS conventions, and hit enter.
I hope you find this useful! (For reference, it took 2:45.935 to extract using my hardware.)
Generation Command: native-image -jar FVDehasher-1.01-SNAPSHOT.jar -march=compatibility -O3 --strict-image-heap --no-fallback --initialize-at-build-time
